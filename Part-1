#Multiples of 3 and 5
Problem 1
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. 
The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.

Ans: 233168 

Solution: 
        def mul_3or5: 
           sum = 0
           for i in range(1000):
	            if i%3 ==0 or i%5 ==0:
	               sum += i
         return sum
         

#Even Fibonacci numbers
Problem 2 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Ans: 4613732

Solution: 
        def even_fib_sum: 
           a, b, sum = 1, 2, 0
          while(a<=4000000):   # range is 4 million 
            if a%2 == 0:
              sum += a
            a, b = b , a + b
          return sum
          
     
#Largest prime factor
Problem 3 
The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?

Ans: 6857

Solution: 
	import math

	def find_largest_prime(num):
	    largest_prime = 0
	    if(num % 2 == 0):
		largest_prime = 2

	    while(num%2==0):
		num /=2

	    for i in range(3,int(math.sqrt(num))+ 1,2):
		while(num%i == 0):
		    if (largest_prime < i):
			largest_prime = i
			num = num/i

	    if (num > 2 and largest_prime < num):
		    largest_prime = num

	 return largest_prime
